<?php

namespace CoreBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;


/**
 * Story
 *
 * @ORM\Table(name="story")
 * @ORM\Entity(repositoryClass="CoreBundle\Repository\StoryRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Story
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @Assert\NotBlank() 
     * @Assert\Type("string",message="The value {{ value }} is not a valid {{ type }}.") 
     *
     * @ORM\Column(name="Title", type="string", length=255)
     */
    private $title;

    /**
     * @var string
     *
     * @Assert\NotBlank() 
     * @Assert\Type("string",message="The value {{ value }} is not a valid {{ type }}.") 
     *
     *
     * @ORM\Column(name="Content", type="text")
     */
    private $content;

    /**
     * @var \DateTime
     *
     * @Gedmo\Timestampable(on="create")
     * @ORM\Column(name="DateCreation", type="datetime")
     */
    private $dateCreation;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="DateLastModification", type="datetime")
     * @Gedmo\Timestampable(on="update")
     */
    private $dateLastModification;

    /**
     * @var BougStoryReadAccess
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\BougStoryReadAccess", mappedBy="boug", cascade={"persist", "remove"})
     */
    private $bougStoryReadAccess;
    //* @ORM\JoinColumn(nullable=false)

    /**
     * @var BougStoryIsCharacter
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\BougStoryIsCharacter", mappedBy="boug", cascade={"persist", "remove"})
     */
    private $bougStoryIsCharacter;
     //* @ORM\JoinColumn(nullable=false)

    /**
     * @var Boug
     *
     * @ORM\ManyToOne(targetEntity="CoreBundle\Entity\Boug", inversedBy="stories", cascade={"persist"})
     * @ORM\JoinColumn(nullable=false)
     */
    private $owner;

    /**
     * @var array
     *
     * @ORM\ManyToMany(targetEntity="CoreBundle\Entity\FriendsGroup", inversedBy="stories", cascade={"persist"})
     */
    private $groups;

    /**
     * @var bool
     *
     * @ORM\Column(name="isPublic", type="boolean")
     */
    private $isPublic;

}
