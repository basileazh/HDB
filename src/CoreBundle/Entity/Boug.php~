<?php

namespace CoreBundle\Entity;

// use Symfony\Bridge\Doctrine\Tests\Fixtures\User;
use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;

/**
 * Boug
 *
 * @ORM\Table(name="boug")
 * @ORM\Entity(repositoryClass="CoreBundle\Repository\BougRepository")
 */
class Boug extends BaseUser
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="Name", type="string", length=255)
     */
    public $name;

    /**
     * @var string
     *
     * @ORM\Column(name="FirstName", type="string", length=255)
     */
    private $firstName;

    /**
     * @var string
     *
     * @ORM\Column(name="Login", type="string", length=255, unique=true)
     */
    // private $login; @TODO : dégager


    /**
     * @var \DateTime
     *
     * @ORM\Column(name="DateRegistration", type="datetime")
     */
    private $dateRegistration;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="DateBirth", type="datetime")
     */
    private $dateBirth;

    /**
     * @var bool
     *
     * @ORM\Column(name="IsAdmin", type="boolean")
     */
    private $isAdmin;

    /**
     * @var bool
     *
     * @ORM\Column(name="IsActive", type="boolean")
     */
    private $isActive;

    /**
     * @var BougStoryReadAccess
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\BougStoryReadAccess", mappedBy="boug")
     * @ORM\JoinColumn(nullable=false)
     */
    private $storiesAccess;

    /**
     * @var BougStoryIsCharacter
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\BougStoryIsCharacter", mappedBy="boug")
     * @ORM\JoinColumn(nullable=false)
     */
    private $bougStoryIsCharacter;

    /**
     * @var array
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\Story", mappedBy="owner")
     * @ORM\JoinColumn(nullable=false)
     */
    private $stories;

    /**
    * @var array
    *
    * @ORM\OneToMany(targetEntity="CoreBundle\Entity\Friends", mappedBy="boug1")
    */
    private $friendsAdderOf;

    /**
    * @var array
    *
    * @ORM\OneToMany(targetEntity="CoreBundle\Entity\Friends", mappedBy="boug2")
    */
    private $friendsAddedBy;

    /**
    * @var array
    *
    * @ORM\ManyToMany(targetEntity="CoreBundle\Entity\FriendsGroup", inversedBy="members")
    */
    private $friendsGroups;

    /**
     * @var array
     *
     * @ORM\OneToMany(targetEntity="CoreBundle\Entity\FriendsGroup", mappedBy="manager")
     */
    private $groupsManaged;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Boug
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set firstName
     *
     * @param string $firstName
     *
     * @return Boug
     */
    public function setFirstName($firstName)
    {
        $this->firstName = $firstName;

        return $this;
    }

    /**
     * Get firstName
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

//TODO : dégager
    // /**
    //  * Set login
    //  *
    //  * @param string $login
    //  *
    //  * @return Boug
    //  */
    // public function setLogin($login)
    // {
    //     $this->login = $login;

    //     return $this;
    // }

    // /**
    //  * Get login
    //  *
    //  * @return string
    //  */
    // public function getLogin()
    // {
    //     return $this->login;
    // }

}
