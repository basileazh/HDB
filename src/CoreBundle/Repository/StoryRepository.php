<?php

namespace CoreBundle\Repository;

use CoreBundle\Entity\Story;

/**
 * StoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StoryRepository extends \Doctrine\ORM\EntityRepository
{
	//Donne les histoires qui seront affichées sur la page d'acceuil de l'utilisateur
	public function getHomePageStories($user)
	{
		$storiesToDisplay = $this->getStoriesBougCanAccess($user);
		usort($storiesToDisplay, [Story::class, 'compareStoriesByCreationDate']);

		return $storiesToDisplay; 
	}

	// Donnes les histoires qui doivent être affichées sur la HomePage d'un Boug
	// Histoires de l'utilisateur + celles de ses amis + celles de ses groupes
	// Les histoires sont rendues dans l'ordre chronologique en partant de la plus récente
	// public function getHomePageStories($user)
	// {
	// 	// $friendsStories = $this->getFriendsStories($user);
	// 	// $ownerStories = $this->getOwnerStories($user);

	// 	// $storiesToDisplay = array_merge($friendsStories, $ownerStories);
 //    	// $bougStoryReadAccessRepository = $this->getEntityManager()->getRepository('CoreBundle:bougStoryReadAccess');
	// 	// $storiesToDisplay = $bougStoryReadAccessRepository->findBy(['boug' => $user]);
	// 	usort($storiesToDisplay, [Story::class, 'compareStoriesByCreationDate']);

	// 	return $storiesToDisplay; 
	// }

	//Donne les toutes les histoires pour lesquelles un boug a un accès en lecture
	public function getStoriesBougCanAccess($boug)
	{
		$storiesIds = $this->_em
            ->createQueryBuilder()
            ->select('IDENTITY(bsra.story)')
            ->from('CoreBundle:BougStoryReadAccess', 'bsra')
            ->where('bsra.boug = :boug')
            ->setParameter('boug', $boug)
            ->getQuery()
            ->getResult();

    	$storyList = [];
    	foreach ($storiesIds as $storyId)
    		$storyList[] = $this->find($storyId[1]);
    	return $storyList;
	}

	// // Donne les histoires écrites par un Boug
	// public function getOwnerStories($user)
	// {
	// 	return $this->findBy(
 //       		[ 'owner' => $user ]
 //      	);
	// }

	// // Donne les histoires des amis d'un Boug
	// public function getFriendsStories($user)
	// {
	// 	$friendsRepository = $this->getEntityManager()->getRepository('CoreBundle:Friends');
	// 	$friends = $friendsRepository->getFriendsOfBoug($user);


	// 	$queryBuilder = $this->createQueryBuilder('s')
	// 		->addSelect('s')
	// 		->where('s.owner IN(:owners)')
	// 		->setParameter('owners', $friends);


 //  		return $queryBuilder->getQuery()->getResult();
	// }

}
