<?php

namespace CoreBundle\Repository;

use CoreBundle\Entity\Story;

/**
 * StoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StoryRepository extends \Doctrine\ORM\EntityRepository
{
	// Donnes les histoires qui doivent être affichées sur la HomePage d'un Boug
	// Histoires de l'utilisateur + celles de ses amis + celles de ses groupes
	// Les histoires sont rendues dans l'ordre chronologique en partant de la plus récente
	public function getHomePageStories($user)
	{
		$friendsStories = $this->getFriendsStories($user);
		$ownerStories = $this->getOwnerStories($user);

		$storiesToDisplay = array_merge($friendsStories, $ownerStories);
		usort($storiesToDisplay, ['Story', 'compareStoriesByCreationDate']);

		return $storiesToDisplay; 
	}

	// Donne les histoires écrites par un Boug
	public function getOwnerStories($user)
	{
		return $this->findBy(
       		[ 'owner' => $user ]
      	);

	}

	// Donne les histoires des amis d'un Boug
	public function getFriendsStories($user)
	{
		$friendsRepository = $this->getEntityManager()->getRepository('CoreBundle:Friends');
		$friends = $friendsRepository->getFriendsOfBoug($user);


		$queryBuilder = $this->createQueryBuilder('s')
			->addSelect('s')
			->where('s.owner IN(:owners)')
			->setParameter('owners', $friends);


  		return $queryBuilder->getQuery()->getResult();
	}

	// Compare deux Stories selon leur date de création. Renvoie 0 si égal, 1 si $s1 est plus récente, -1 si $s2 est plus récente
	public static function compareStoriesByCreationDate($s1, $s2)
	{
		if ($s1->getDateCreation() == $s1->getDateCreation()) {
			return 0;
		}

		return ($s1->getDateCreation() > $s2->getDateCreation()) ? +1 : -1;
	}
}
